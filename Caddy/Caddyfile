# API 서버 설정
{$DOMAIN} {
    # 전역 CORS 헤더 설정 (모든 요청에 적용)
    header {
        # CORS 헤더
        Access-Control-Allow-Origin "https://www.cert-is.com, https://cert-is.com, https://cert-is.vercel.app, https://certis.mooo.com"
        Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS"
        Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, Accept, Origin"
        Access-Control-Allow-Credentials "true"
        Access-Control-Max-Age "86400"
        
        # 보안 헤더
        X-Content-Type-Options "nosniff"
        X-Frame-Options "DENY" 
        X-XSS-Protection "1; mode=block"
        Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"
        Content-Security-Policy "default-src 'self'; connect-src 'self' https://www.cert-is.com https://cert-is.com"
        Referrer-Policy "strict-origin-when-cross-origin"
        Permissions-Policy "geolocation=(), microphone=(), camera=()"
        -Server
    }

    # OPTIONS 요청 (CORS preflight) 처리
    @cors_preflight method OPTIONS
    handle @cors_preflight {
        respond "" 204
    }

    # API 요청 처리
    handle /* {
        reverse_proxy backend:8080 {
            header_up Host {http.request.host}
            header_up X-Real-IP {http.request.remote}
            header_up X-Forwarded-For {http.request.remote}
            header_up X-Forwarded-Proto {http.request.scheme}
        }
    }

    # 액추에이터 엔드포인트
    handle /actuator/* {
        reverse_proxy backend:8080
    }

    # 기본 요청
    handle {
        respond "API Server is running" 200
    }

    # TLS 설정
    tls admin@cert-is.com

    log {
        output file /var/log/caddy/api_access.log {
            roll_size 100mb
            roll_keep 5
            roll_keep_for 720h
        }
        # Fail2Ban이 파싱하기 쉬운 형식
        format transform `{ts} {request>remote_ip} "{request>method} {request>uri} {request>proto}" {status} {size} "{request>headers>Referer>[0]}" "{request>headers>User-Agent>[0]}" {duration}`
    }
}

# HTTP → HTTPS 리다이렉트
http://{$DOMAIN} {
    redir https://{$DOMAIN}{uri} permanent
}