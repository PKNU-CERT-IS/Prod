volumes:
  postgresql-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/data/postgresql
  redis-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/data/redis

services:
  # PostgreSQL Database
  postgresql:
    image: postgres:15.14-alpine
    container_name: certis-postgresql
    env_file:
      - ./.env
    volumes:
      - postgresql-data:/var/lib/postgresql/data
      - ./db/migration:/docker-entrypoint-initdb.d
      - ./db/01-setup-pg-hba.sh:/docker-entrypoint-initdb.d/01-setup-pg-hba.sh
    ports:
      - "0.0.0.0:5432:5432"
    networks:
      - database-network
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=md5
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      postgres
      -c listen_addresses='*'
      -c max_connections=200
      -c shared_buffers=128MB
      -c effective_cache_size=512MB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c work_mem=4MB
      -c min_wal_size=80MB
      -c max_wal_size=1GB

  # Redis Service
  redis:
    image: redis:latest
    container_name: certis-redis
    env_file:
      - ./.env
    volumes:
      - redis-data:/data
    ports:
      - "0.0.0.0:6379:6379"
    networks:
      - database-network
    command:
      [
        "redis-server",
        "--bind",
        "0.0.0.0",
        "--protected-mode",
        "no",
        "--requirepass",
        "${REDIS_PASSWORD}",
        "--appendonly",
        "yes",
        "--maxmemory",
        "${REDIS_MAX_MEMORY:-400mb}",
        "--maxmemory-policy",
        "allkeys-lru",
        "--save",
        "900",
        "1",
        "--save",
        "300",
        "10",
        "--save",
        "60",
        "10000",
      ]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  database-network:
    driver: bridge
    internal: false
